---
- name: Provision the infrastructure
  hosts: controller
  roles:
    # The provisioner role consumes the terraform adjacent to the playbook
    # and exports the created ec2_instances to inventory, while also registering
    # the other outputs from the terraform module for use later in the playbook
  - role: provisioner
    vars:
      cert_directory: '{{ playbook_dir }}/output'

- name: Wait for connectivity to all terraformed hosts
  hosts: terraformed
  gather_facts: false
  roles:
  - role: cloud_init_finished

- name: Update all connected terraformed hosts
  hosts: connected
  roles:
  - role: updated

- name: Configure Red Hat Quay
  hosts: registry
  vars:
    registry_bucket: '{{ hostvars.controller.terraform.outputs.registry_bucket.value }}'
  roles:
  - role: jharmison_redhat.redhat_quay
    vars:
      registry_hostname: '{{ ansible_host }}'
      registry_storage_details:
        host: s3.{{ registry_bucket.region }}.amazonaws.com
        s3_bucket: '{{ registry_bucket.bucket }}'
        s3_access_key: '{{ registry_bucket.access_key }}'
        s3_secret_key: '{{ registry_bucket.secret_key }}'
      password_dir: '{{ playbook_dir }}/output'
      cert_style: byo
      registry_certificate: '{{ lookup("file", playbook_dir+"/output/registry.crt") }}'
      registry_certificate_key: '{{ lookup("file", playbook_dir+"/output/registry.key") }}'

- name: Configure Squid
  hosts: proxy
  become: true
  vars:
    ca_cert_and_key: '{{ hostvars.controller.ca.stdout }}'
    allowed_urls:
    - .{{ cluster_name }}.{{ cluster_domain }}
    - .rhui3.{{ aws_region }}.aws.ce.redhat.com
  roles:
  - role: proxy

- name: Validate bastion configuration
  hosts: bastion
  become: true
  pre_tasks:
  - name: Ensure proxy CA certificate is present in anchors
    copy:
      src: '{{ playbook_dir }}/output/squid.crt'
      dest: /etc/pki/ca-trust/source/anchors/
    register: squid_ca
  - name: Ensure registry certificate is present in anchors
    copy:
      content: '{{ hostvars.registry.selfsigned_certificate.certificate }}'
      dest: /etc/pki/ca-trust/source/anchors/registry.crt
    when: hostvars.registry.cert_style|default(None) == "selfsigned"
    register: registry_cert
  - name: Ensure any additional CAs are present in anchors
    copy:
      content: '{{ item.content }}'
      dest: /etc/pki/ca-trust/source/anchors/{{ item.name }}.crt
    loop: '{{ extra_ca_certificates|default([]) }}'
    register: extra_cas
  - name: Update CA trust
    command: update-ca-trust
    when: squid_ca.changed or registry_cert.changed or extra_cas.changed
  roles:
  - role: updated
  tasks:
  - name: Install container-tools
    dnf:
      name: '@container-tools'
      state: installed
  - name: Login to quay registry to validate connection
    containers.podman.podman_login:
      username: '{{ registry_admin.username }}'
      password: '{{ registry_admin.password }}'
      registry: '{{ hostvars.registry.ansible_host }}'
